<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hqc.io</title>
    <description>C·∫©m Hu·ª≥nh is a Chelsea fan and full-stack developer with four-year experience working in web development field. He is currently based in Sai Gon, Vietnam. He loves reading books, playing soccer, listening to C-pop (he idolizes Jay Chou). Contact him at: huynhquancam at gmail dot com
</description>
    <link>https://hqc.io/</link>
    <atom:link href="https://hqc.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 16 May 2017 21:10:44 +0200</pubDate>
    <lastBuildDate>Tue, 16 May 2017 21:10:44 +0200</lastBuildDate>
    <generator>Jekyll v3.4.2</generator>
    
      <item>
        <title>Bundler Gotcha</title>
        <description>&lt;p&gt;A few days ago I encountered a strange behavior of Bundler so this post notes
down how my experience with it was.&lt;/p&gt;

&lt;h3 id=&quot;whats-up&quot;&gt;What‚Äôs up?&lt;/h3&gt;

&lt;p&gt;We know what &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler&lt;/code&gt; provides &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle.require&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle.setup&lt;/code&gt; to deal with
dependencies grouping/requiring in our project. With &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle.setup&lt;/code&gt; we can explicitly
specify which gem groups we want to add to &lt;code class=&quot;highlighter-rouge&quot;&gt;$LOAD_PATH&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Says we have an Gemfile&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rack&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sinatra&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;puma&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;group: :production&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As the API tells, we can make only ‚Äúdevelopment‚Äù gems available for requiring.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config.ru&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bundler'&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Bundler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sinatra/base'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyApp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then boot up the server with &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rackup

&lt;span class=&quot;c&quot;&gt;# Puma starting in single mode...&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# * Version 3.8.2 (ruby 2.2.2-p95), codename: Sassy Salamander&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# * Min threads: 0, max threads: 16&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# * Environment: development&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# * Listening on tcp://localhost:9292&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Use Ctrl-C to stop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;KABOOM üí•! Puma is booted! Why?&lt;/p&gt;

&lt;h3 id=&quot;what-happened&quot;&gt;What happened?&lt;/h3&gt;

&lt;h4 id=&quot;rack&quot;&gt;Rack&lt;/h4&gt;

&lt;p&gt;By default Rack will boot WEBrick if there‚Äôs no server found. But it will detect
for a more powerful server like Puma or Thin and if there is one, Rack will prioritize to
load that instead.&lt;/p&gt;

&lt;h4 id=&quot;bundler&quot;&gt;Bundler&lt;/h4&gt;

&lt;p&gt;But isn‚Äôt Puma un-requireable? Haven‚Äôt we grouped that server to only appear on
&lt;code class=&quot;highlighter-rouge&quot;&gt;production&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler.setup&lt;/code&gt; should have their job done well?&lt;/p&gt;

&lt;p&gt;The tickle of curiosity drove me to look through the code of &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt;. It
turned out in &lt;a href=&quot;https://github.com/bundler/bundler/blob/909979271a0c2fe0d59f6fc8c4f5a630e597f1ac/lib/bundler/cli/exec.rb#L71&quot;&gt;this line of code&lt;/a&gt;,
&lt;strong&gt;Bundler tries to setup and brings everything we have in &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; into &lt;code class=&quot;highlighter-rouge&quot;&gt;$LOAD_PATH&lt;/code&gt;.&lt;/strong&gt;
This part of code is executed way in prior to our &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler.setup&lt;/code&gt; and once a &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler.setup&lt;/code&gt;
is called, all latter ones are void (see my PR below).&lt;/p&gt;

&lt;p&gt;That‚Äôs why &lt;code class=&quot;highlighter-rouge&quot;&gt;Rack&lt;/code&gt; could see &lt;code class=&quot;highlighter-rouge&quot;&gt;Puma&lt;/code&gt; and therefor booted the server up.
Additionally, we can require any gem we have in &lt;code class=&quot;highlighter-rouge&quot;&gt;config.ru&lt;/code&gt; despite of its group
specified in &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I actually created &lt;a href=&quot;https://github.com/bundler/bundler/issues/5661&quot;&gt;an issue on Bundler‚Äôs Github&lt;/a&gt;
and also &lt;a href=&quot;https://github.com/bundler/bundler/pull/5659&quot;&gt;a pull request&lt;/a&gt; to clarify it.
Interestingly &lt;a href=&quot;https://github.com/segiddins&quot;&gt;@segiddins&lt;/a&gt;, the repo owner, advised the behavior
that strange to me (and some people I assume) is sort of ‚Ä¶ intentional.&lt;/p&gt;

&lt;h3 id=&quot;so-what&quot;&gt;So what?&lt;/h3&gt;

&lt;p&gt;What‚Äôd be the possible solution for this case?&lt;/p&gt;

&lt;h4 id=&quot;bundle-config-without&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle config without&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Never run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; alone, run it with &lt;code class=&quot;highlighter-rouge&quot;&gt;--with&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install --without production
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;With this option &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler&lt;/code&gt; will not download the gems in production group.
&lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler&lt;/code&gt; is smart enough to remember our config and use it for future calls.&lt;/p&gt;

&lt;h4 id=&quot;build-your-own-bundle-exec&quot;&gt;Build your own &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# bin/bundle-exec&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rubygems&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bundler&quot;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RACK_ENV&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_sym&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;use-bundlerreset&quot;&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler.reset!&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;After digging &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler&lt;/code&gt;‚Äôs codebase here and there, I realize that we can use
&lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle.reset!&lt;/code&gt; to reset everything, then use &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle.setup&lt;/code&gt; to set up again.&lt;/p&gt;

&lt;p&gt;This doesn‚Äôt solve the &lt;code class=&quot;highlighter-rouge&quot;&gt;Puma&lt;/code&gt; problem we have above but at least from our &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle.setup&lt;/code&gt; on,
there will no gem from other groups can be required.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config.ru&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rubygems&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bundler&quot;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reset!&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Anyway, &lt;strong&gt;this method is untested&lt;/strong&gt;, in fact I never try using or testify it.
Use it at your own risk, I take no responsible for it.&lt;/p&gt;

&lt;h3 id=&quot;whats-next&quot;&gt;What‚Äôs next?&lt;/h3&gt;

&lt;p&gt;Personally I think this behavior of Bundler might cause some false positives.
What if we accidentally loaded up some gem that‚Äôs merely for development or test?
What if that gem was ‚Ä¶ &lt;code class=&quot;highlighter-rouge&quot;&gt;DatabaseCleaner&lt;/code&gt; üò±üôÄüò±üôÄüò±üôÄ?&lt;/p&gt;

&lt;p&gt;Also there‚Äôs no option in &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt; for us to specify the group either.&lt;/p&gt;

&lt;p&gt;So sorry for nagging but once more.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Never ever run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; alone, use it with &lt;code class=&quot;highlighter-rouge&quot;&gt;--without&lt;/code&gt;!&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 26 Mar 2017 00:00:00 +0100</pubDate>
        <link>https://hqc.io/2017/03/26/bundler-gotchas.html</link>
        <guid isPermaLink="true">https://hqc.io/2017/03/26/bundler-gotchas.html</guid>
        
        <category>ruby</category>
        
        <category>bundler</category>
        
        
      </item>
    
      <item>
        <title>Why constant mocking is a bad idea?</title>
        <description>&lt;p&gt;Says we have a &lt;code class=&quot;highlighter-rouge&quot;&gt;Clock&lt;/code&gt; class which returns the current time of the system.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Clock&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To unit-test this class, RSpec supports an &lt;strong&gt;easy&lt;/strong&gt; way to mock test if the
method has been called.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;once&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As easy as ABC no?  But is it as &lt;strong&gt;simple&lt;/strong&gt; as it seems to be?&lt;/p&gt;

&lt;h3 id=&quot;easy--simple&quot;&gt;Easy !== simple&lt;/h3&gt;

&lt;p&gt;I believe we never understand mock test until we write our own mock framework.
So off we go.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;expect_called&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;called&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# method called counter&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;original_method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# keep the original method&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# redefine the method&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;called&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# increase the counter every time this method is called&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;original_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# invoke the original method&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# call the block&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;called&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# check if method has been called&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# To use it&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;expect_called&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, &lt;code class=&quot;highlighter-rouge&quot;&gt;expect_called&lt;/code&gt; needs to ‚Äúmonkey-patch‚Äù &lt;code class=&quot;highlighter-rouge&quot;&gt;klass&lt;/code&gt; to count the
amount of times &lt;code class=&quot;highlighter-rouge&quot;&gt;:now&lt;/code&gt; method being called. We all know mutation is bad and
could turn things into a disaster. What if there are some core classes or
third-party libraries we use also require &lt;code class=&quot;highlighter-rouge&quot;&gt;Time.now&lt;/code&gt; to work?&lt;/p&gt;

&lt;p&gt;Furthermore, we need some magical mechanisms to ‚Äúrevert‚Äù &lt;code class=&quot;highlighter-rouge&quot;&gt;Time.now&lt;/code&gt; back to its
original state, which I am not going to cover in this blog post. Let me emphasis
the answer for the question in the previous section, &lt;strong&gt;No, it is not simple&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;expect_called&lt;/code&gt; is exactly how &lt;code class=&quot;highlighter-rouge&quot;&gt;rspec-mocks&lt;/code&gt; works under the hood. It redefines
the method, counts the calls, stubs the return, and reverts it back to the
original state when tear-down.&lt;/p&gt;

&lt;h3 id=&quot;dependency-injection&quot;&gt;Dependency injection&lt;/h3&gt;

&lt;p&gt;Mutation is bad but mocks are not. Mock test is so useful when we want to establish
a contract between our class and another object without needing that object to really
exist.&lt;/p&gt;

&lt;p&gt;And it‚Äôs absolutely possible to write mock test without any mutation needed in
RSpec.&lt;/p&gt;

&lt;p&gt;Let‚Äôs change our code a bit, with &lt;code class=&quot;highlighter-rouge&quot;&gt;Time&lt;/code&gt; as an injected dependency.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Clock&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And writing test is so easy.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;clock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;now: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Although the change is small, the improvement is huge. &lt;code class=&quot;highlighter-rouge&quot;&gt;clock&lt;/code&gt; is a mock object which
only lives in this test example and does not require any class to be mutated. Also
we explicitly describe the contract of how the &lt;code class=&quot;highlighter-rouge&quot;&gt;clock&lt;/code&gt; should be. Winning!&lt;/p&gt;

&lt;p&gt;We might also want to enhance the test by covering the default case and testing
its behavior.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;other-bad-rspec-mock-tests&quot;&gt;Other bad RSpec mock tests&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# From RSpec 2 and RSpec 3 deprecated them.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;allow_any_instance_of&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;and_return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Wibble&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;expect_any_instance_of&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;and_return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Wobble&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Invitation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:deliver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;read-ups&quot;&gt;Read-ups&lt;/h3&gt;

&lt;p&gt;Some great blog posts about mocks and dependency injection in case you
want to read further.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/&quot;&gt;Mocks and explicit contracts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://solnic.eu/2013/12/17/the-world-needs-another-post-about-dependency-injection-in-ruby.html&quot;&gt;The world needs another post about dependency injection&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 26 Mar 2017 00:00:00 +0100</pubDate>
        <link>https://hqc.io/2017/03/26/constant-mocking-is-bad.html</link>
        <guid isPermaLink="true">https://hqc.io/2017/03/26/constant-mocking-is-bad.html</guid>
        
        <category>ruby</category>
        
        <category>testing</category>
        
        <category>mock</category>
        
        
      </item>
    
      <item>
        <title>UX for CLI app</title>
        <description>&lt;p&gt;As a terminal lover, I always want to get &lt;strong&gt;everything&lt;/strong&gt; done on my terminal,
instead of switching to browser or an external app. I personally built up a
couple of CLI apps for my personal use (checkout
&lt;a href=&quot;https://github.com/qcam/worque&quot;&gt;worque&lt;/a&gt; and
&lt;a href=&quot;https://github.com/qcam/3llo&quot;&gt;3llo&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I think every computer software needs UX, as long as it interacts with users.
So as a user and a developer, here are the experience I would love to see in an
ideal CLI app.&lt;/p&gt;

&lt;h3 id=&quot;i-wish-not-to-touch-my-mouse&quot;&gt;I wish not to touch my mouse&lt;/h3&gt;

&lt;p&gt;Some people likes using terminal app because they want to avoid using mouses as
much as possible. Perhaps you think they are paranoid because mouse is one of
the best inventions in the computer era. But yes, note that when you design an
CLI app for other people.&lt;/p&gt;

&lt;h3 id=&quot;do-not-mess-up-my-environment-variables&quot;&gt;Do not mess up my environment variables&lt;/h3&gt;

&lt;p&gt;I have to admit environment variable is a handy way to start up a CLI app
development. You will see how much I love using them in my CLI apps too. But one
thing, be careful with naming because your environment variables could crash
with other CLI apps that share the same name like yours. That‚Äôs a kaboom.&lt;/p&gt;

&lt;h3 id=&quot;make-sure-you-have---help&quot;&gt;Make sure you have &lt;code class=&quot;highlighter-rouge&quot;&gt;--help&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;And keep it human readable and up-to-date. CLI users are supposed to be decently
comfortable with terminal, not all of us are professional hackers though.&lt;/p&gt;

&lt;h3 id=&quot;i-expect-a-setup-instruction&quot;&gt;I expect a setup instruction&lt;/h3&gt;

&lt;p&gt;Let‚Äôs say your app needs some sort of API tokens to get working, make sure your
documentation covers the instruction of how to get them, best with a link and
some screenshots.&lt;/p&gt;

&lt;h3 id=&quot;and-most-importantly-never-track-user-behaviors&quot;&gt;And most importantly, NEVER TRACK user behaviors&lt;/h3&gt;

&lt;p&gt;Yes, this is the &lt;strong&gt;BEST&lt;/strong&gt; part of using an CLI app.&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Mar 2017 00:00:00 +0100</pubDate>
        <link>https://hqc.io/2017/03/12/cli-ux.html</link>
        <guid isPermaLink="true">https://hqc.io/2017/03/12/cli-ux.html</guid>
        
        <category>ux</category>
        
        <category>cli</category>
        
        
      </item>
    
      <item>
        <title>B∆∞u ƒëi·ªán ·ªü Th·ª•y ƒêi·ªÉn</title>
        <description>&lt;p&gt;N·∫øu b·∫£o t√¥i k·ªÉ m·ªôt th·ª© ƒë·∫∑c bi·ªát ·ªü Th·ª•y ƒêi·ªÉn, ch·∫Øc ch·∫Øn t√¥i s·∫Ω b·∫£o ƒë√≥ l√† h·ªá th·ªëng b∆∞u ƒëi·ªán.&lt;/p&gt;

&lt;p&gt;H·ªá th·ªëng b∆∞u ƒëi·ªán ·ªü Th·ª•y ƒêi·ªÉn r·∫•t kh√°c so v·ªõi Vi·ªát Nam v√† th·∫ø gi·ªõi (hay ch√≠ √≠t l√† nh·ªØng n∆∞·ªõc t√¥i bi·∫øt). B·ªüi v√¨ ·ªü Th·ª•y ƒêi·ªÉn kh√¥ng c√≥ ‚Ä¶ c√°i b∆∞u c·ª•c (post office) n√†o c·∫£.&lt;/p&gt;

&lt;p&gt;M·ªôt v√†i nƒÉm tr∆∞·ªõc, Posten (T·ªïng b∆∞u c·ª•c Th·ª•y ƒêi·ªÉn) ƒë√£ quy·∫øt ƒë·ªãnh ti·∫øn h√†nh t√°i c·∫•u tr√∫c h·ªá th·ªëng b∆∞u ƒëi·ªán c·ªßa h·ªç. Thay v√¨ x√¢y c√°c b∆∞u c·ª•c gi·ªëng nh∆∞ c√°c n∆∞·ªõc kh√°c tr√™n th·∫ø gi·ªõi, h·ªç quy·∫øt ƒë·ªãnh t·∫≠n d·ª•ng c√°c si√™u th·ªã, s·∫°p b√°o, tr·∫°m xƒÉng ƒë·ªÉ l√†m ƒë·∫°i l√Ω cho c√°c d·ªãch v·ª• b∆∞u ƒëi·ªán. B·∫°n c√≥ th·ªÉ l√†m m·ªçi th·ª© li√™n quan ƒë·∫øn b∆∞u ch√≠nh ·ªü c√°c ƒë·∫°i l√Ω n√†y nh∆∞ mua tem th∆∞, b√¨ th∆∞. Th∆∞·ªùng th√¨ c≈©ng s·∫Ω c√≥ m·ªôt c√°i h·ªôp th∆∞ (v√¢ng h·ªôp th∆∞ nh∆∞ trong phim ·∫•y) ·ªü g·∫ßn ƒë√≥, b·∫°n ch·ªâ vi·ªác mua tem d√°n v√†o th∆∞ b·ªè v√†o l√† xong.&lt;/p&gt;

&lt;p&gt;Khi b·∫°n mua h√†ng tr√™n m·∫°ng hay b·∫°n b√® g·ª≠i t·∫∑ng b·∫°n c√°i h·ªôp TV ch·∫≥ng h·∫°n, Posten s·∫Ω g·ª≠i cho b·∫°n m·ªôt t·ªù gi·∫•y th√¥ng b√°o th·ªùi gian ƒë·ªãa ƒëi·ªÉm b∆∞u ki·ªán c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c g·ª≠i ƒë·∫øn. Vi·ªác b·∫°n c·∫ßn l√†m l√† mang t·ªù gi·∫•y v√† ID card ƒë·∫øn nh·∫≠n l√† xong.&lt;/p&gt;

&lt;p&gt;·ªû Vi·ªát Nam b∆∞u ƒëi·ªán th∆∞·ªùng ƒë∆∞·ª£c k·∫øt h·ª£p v·ªõi c√°c d·ªãch v·ª• nh∆∞ thanh to√°n ƒëi·ªán n∆∞·ªõc, c√≤n ·ªü Th·ª•y ƒêi·ªÉn c√°c ƒë·∫°i l√Ω n√†y ch·ªâ l√†m ƒë√∫ng c√¥ng vi·ªác b∆∞u ch√≠nh (t·∫•t nhi√™n n√≥ c≈©ng l√† c√°i si√™u th·ªã n·ªØa).&lt;/p&gt;

&lt;p&gt;V·ªõi h·ªá th·ªëng n√†y th√¨ b∆∞u c·ª•c s·∫Ω kh√¥ng c·∫ßn ph·∫£i t·ªìn t·∫°i n·ªØa, ƒë√∫ng kh√¥ng?&lt;/p&gt;

&lt;p&gt;Tham kh·∫£o: &lt;a href=&quot;http://www.uppsalastudentkar.se/international-students/life-uppsala/good-know/swedish-postal-system&quot;&gt;How the Swedish Postal system works&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Mar 2017 00:00:00 +0100</pubDate>
        <link>https://hqc.io/2017/03/12/buu-dien-o-thuy-dien.html</link>
        <guid isPermaLink="true">https://hqc.io/2017/03/12/buu-dien-o-thuy-dien.html</guid>
        
        <category>vietnamese</category>
        
        <category>sweden</category>
        
        
      </item>
    
      <item>
        <title>Five Rails Gotchas</title>
        <description>&lt;p&gt;It‚Äôs undeniable that Rails is a great framework to speedily build up your application.
However, despite of its handiness, like other frameworks, Rails has its own flaws and
is never a silver bullet. This post is going to show you some of the gotchas (or pitfalls you name it)
I encountered while working with Rails.&lt;/p&gt;

&lt;h3 id=&quot;associations-writer&quot;&gt;associations writer&lt;/h3&gt;

&lt;p&gt;The code below is supposed to assign posts to a specific user.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by_name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'John'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Of course it works (perfectly)! Then you might ask what‚Äôs the problem?  Good question.
When do you think the posts will get saved?&lt;/p&gt;

&lt;p&gt;For a common people with common sense, &lt;code class=&quot;highlighter-rouge&quot;&gt;posts&lt;/code&gt; will be persisted when you
invoke &lt;code class=&quot;highlighter-rouge&quot;&gt;user.save!&lt;/code&gt;, then you‚Äôre trapped. Right after &lt;code class=&quot;highlighter-rouge&quot;&gt;user.posts&lt;/code&gt; was assigned,
the persistence will be invoked, so calling &lt;code class=&quot;highlighter-rouge&quot;&gt;User#save!&lt;/code&gt; here is redundant.&lt;/p&gt;

&lt;h3 id=&quot;after_save-callback&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;after_save&lt;/code&gt; callback&lt;/h3&gt;

&lt;p&gt;I always recommend people not to use Rails callbacks but if you DO have to, use
&lt;code class=&quot;highlighter-rouge&quot;&gt;after_commit&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;A lot of people has written about this, see
&lt;a href=&quot;http://www.justinweiss.com/articles/a-couple-callback-gotchas-and-a-rails-5-fix/&quot;&gt;what Justin Weiss said&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;auto-reloading&quot;&gt;auto-(re)loading&lt;/h3&gt;

&lt;p&gt;In the example below, if you invoke &lt;code class=&quot;highlighter-rouge&quot;&gt;User.foo&lt;/code&gt; without preloading
&lt;code class=&quot;highlighter-rouge&quot;&gt;lib/user/bar.rb&lt;/code&gt;, your code blows up (probably in development environment) with a constant
not found exception.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xyz&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# lib/user/bar.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bar&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;xyz&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;foot&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But why, didn‚Äôt I already define &lt;code class=&quot;highlighter-rouge&quot;&gt;User::Bar&lt;/code&gt; under &lt;code class=&quot;highlighter-rouge&quot;&gt;lib&lt;/code&gt; directory?&lt;/p&gt;

&lt;p&gt;The reason is because Rails treats all missing constants as &lt;code class=&quot;highlighter-rouge&quot;&gt;TOP_LEVEL&lt;/code&gt;
constants. So when &lt;code class=&quot;highlighter-rouge&quot;&gt;User#foo&lt;/code&gt;, since &lt;code class=&quot;highlighter-rouge&quot;&gt;Bar&lt;/code&gt; is not yet defined, Rails will look
up in &lt;code class=&quot;highlighter-rouge&quot;&gt;app/models/bar.rb&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;lib/bar.rb&lt;/code&gt;. That‚Äôs why &lt;code class=&quot;highlighter-rouge&quot;&gt;Bar&lt;/code&gt; (of course) cannot be found.&lt;/p&gt;

&lt;p&gt;To fix this you can explicitly tell Rails its parent module/class.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xyz&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;eager-loading&quot;&gt;eager-loading&lt;/h3&gt;

&lt;p&gt;How to avoid N+1 query in Rails? Typically this is how many people will do.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But do you know how on earth it works?&lt;/p&gt;

&lt;p&gt;First ActiveRecord will fetch all users, then map them to ActiveRecord::Base
objects and hold them in memory.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`users`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then it fetches all posts related to those user IDs, and holds them in memory.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`posts`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`posts`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`user_id`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then it automatically does some ‚Äúposts-to-user‚Äù mapping using Ruby Enumerator.&lt;/p&gt;

&lt;p&gt;For instance, here‚Äôs the pseudo code of how &lt;code class=&quot;highlighter-rouge&quot;&gt;includes&lt;/code&gt; works.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pluck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This works seamlessly most of the time, but when you reach 100_000 users with 1_000
posts each, this strategy might not be so efficient, as it consumes up a great
deal of memory. (Yeah, if you‚Äôre gonna debate how cheap hardware is, go convince your
boss!)&lt;/p&gt;

&lt;h3 id=&quot;sprockets-depend_on&quot;&gt;Sprockets &lt;code class=&quot;highlighter-rouge&quot;&gt;depend_on&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Probably you‚Äôre using SASS &lt;code class=&quot;highlighter-rouge&quot;&gt;@import&lt;/code&gt; instead of traditional &lt;code class=&quot;highlighter-rouge&quot;&gt;//= require&lt;/code&gt; to import
CSS sub-files. To know why &lt;code class=&quot;highlighter-rouge&quot;&gt;@import&lt;/code&gt; is preferable, see @iain‚Äôs comment below.&lt;/p&gt;

&lt;div class=&quot;language-sass highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// app/assets/stylesheets/application.css
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;users/index&quot;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;users/show&quot;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;foo&quot;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bar&quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But you will find that your &lt;code class=&quot;highlighter-rouge&quot;&gt;application.css&lt;/code&gt; is not re-precompiled after you made some
changes to the sub-files e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;users/index&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;That is because of Rails Sprockets‚Äô underlying caching mechanism, which is supposed to
re-precompile your asset if the file has literally changed. On top of that, the caching
framework also observes all dependent files to invalidate cache accordingly. However,
the mechanism doesn‚Äôt work with SASS‚Äôs @import, but its own &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; directive.&lt;/p&gt;

&lt;p&gt;To fix the cache invalidation problem above, you need to explicitly declare which files
Sprockets should observe, by using Sprockets offered &lt;code class=&quot;highlighter-rouge&quot;&gt;depend_on&lt;/code&gt; directive.&lt;/p&gt;

&lt;div class=&quot;language-sass highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// app/assets/stylesheets/application.css
//= depend_on &quot;users/index&quot;;
//= depend_on &quot;users/show&quot;;
//= depend_on &quot;foo&quot;;
//= depend_on &quot;bar&quot;;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;users/index&quot;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;users/show&quot;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;foo&quot;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bar&quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;lessons&quot;&gt;Lessons&lt;/h3&gt;

&lt;p&gt;Good understanding on your tool‚Äôs pros/cons is one of the essential things to be a good programmer.&lt;/p&gt;

&lt;h5 id=&quot;happing-programming&quot;&gt;Happing Programming!!!&lt;/h5&gt;
</description>
        <pubDate>Wed, 07 Sep 2016 00:00:00 +0200</pubDate>
        <link>https://hqc.io/2016/09/07/five-rails-gotchas.html</link>
        <guid isPermaLink="true">https://hqc.io/2016/09/07/five-rails-gotchas.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        
      </item>
    
      <item>
        <title>First seven jobs</title>
        <description>&lt;p&gt;B·∫£y c√¥ng vi·ªác ƒë·∫ßu ti√™n c·ªßa t√¥i.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Th∆° m√°y.&lt;/li&gt;
  &lt;li&gt;Th·ª£ ti·ªán.&lt;/li&gt;
  &lt;li&gt;Th·ª£ m√°y.&lt;/li&gt;
  &lt;li&gt;Gi·ªØ xe.&lt;/li&gt;
  &lt;li&gt;Gia s∆∞.&lt;/li&gt;
  &lt;li&gt;L·∫≠p tr√¨nh vi√™n.&lt;/li&gt;
  &lt;li&gt;L·∫≠p tr√¨nh vi√™n.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 17 Aug 2016 00:00:00 +0200</pubDate>
        <link>https://hqc.io/2016/08/17/first-seven-jobs.html</link>
        <guid isPermaLink="true">https://hqc.io/2016/08/17/first-seven-jobs.html</guid>
        
        <category>thoughts</category>
        
        <category>vietnamese</category>
        
        
      </item>
    
      <item>
        <title>M·∫°n ƒë√†m v·ªÅ T√¢y T·∫°ng (Tibet) v√† b√†i h·ªçc t√¥i r√∫t ra</title>
        <description>&lt;p&gt;G·∫ßn ƒë√¢y khi Trung Qu·ªëc d·ª° b·ªè h·ªçc vi·ªán Ph·∫≠t gi√°o l·ªõn nh·∫•t th·∫ø gi·ªõi ·ªü T√¢y T·∫°ng (Tibet),
nhi·ªÅu ng∆∞·ªùi ƒë√£ l√™n ti·∫øng ch·ªâ tr√≠ch vi·ªác Trung Qu·ªëc chi·∫øm ƒëo·∫°t T√¢y T·∫°ng l√† ngang nhi√™n tr·∫Øng tr·ª£n v√† v√¥ s·ªâ.
Nhi·ªÅu ng∆∞·ªùi c√≤n k√™u g·ªçi nh√¢n d√¢n T√¢y T·∫°ng h√£y ƒë·ª©ng l√™n ƒë·∫•u tranh v√¨ m·ªôt T√¢y T·∫°ng t·ª± do.&lt;/p&gt;

&lt;p&gt;T√¥i c≈©ng l√† m·ªôt trong s·ªë nh·ªØng ng∆∞·ªùi ·ªßng h·ªô T√¢y T·∫°ng (v√† c·∫£ ƒê√†i Loan, HongKong) ƒë·ªôc l·∫≠p t√°ch r·ªùi kh·ªèi
C·ªông ho√† nh√¢n d√¢n Trung Hoa (PRC). Nh∆∞ng vi·ªác h·ªç c√≥ gi√†nh ƒë∆∞·ª£c ƒë·ªôc l·∫≠p kh√¥ng l·∫°i l√† m·ªôt chuy·ªán kh√°c.&lt;/p&gt;

&lt;p&gt;T·ª´ x∆∞a ƒë·∫øn nay th·∫ø gi·ªõi lu√¥n t·ªìn t·∫°i nh·ªØng v·ª• c∆∞·ªõp ƒë·∫•t chi·∫øm ƒëai tr·∫Øng tr·ª£n gi·ªëng nh∆∞ th·∫ø.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Mi·ªÅn Trung v√† mi·ªÅn Nam Vi·ªát Nam hi·ªán nay ƒë√£ b·ªã nh√† Nguy·ªÖn chi·∫øm ƒëo·∫°t tr·∫Øng tr·ª£n t·ª´ c√°c v∆∞∆°ng qu·ªëc Champa v√† Cambodia,
d∆∞·ªõi danh nghƒ©a khai hoang v√† m·ªü r·ªông b·ªù c√µi.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;H·∫ßu h·∫øt ch√¢u Mƒ© b·ªã ngang nhi√™n t∆∞·ªõc ƒëo·∫°t kh·ªèi tay ng∆∞·ªùi Indian (Native American), Maya,
d∆∞·ªõi ng·ªçn c·ªù c·ªßa ng∆∞·ªùi da tr·∫Øng ƒë·∫∑c quy·ªÅn.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;B·∫£n th√¢n Trung Qu·ªëc v·ªën l√† n∆∞·ªõc r·∫•t gi·ªèi trong vi·ªác th√¥n t√≠nh c√°c n∆∞·ªõc kh√°c. B·∫°n n√™n bi·∫øt l√†
h·ªç ƒë√£ l√†m ƒëi·ªÅu ƒë√≥ li√™n t·ª•c h√†ng ng√†n nƒÉm nay. D∆∞·ªõi th·ªùi nh√† H·∫°, tri·ªÅu ƒë·∫°i ƒë·∫ßu ti√™n trong l·ªãch s·ª≠ Trung Hoa,
l√£nh th·ªï Trung Qu·ªëc ch·ªâ l√† m·ªôt nh√∫m nh·ªè (nh∆∞ trong h√¨nh).
Tr·∫£i qua bao th·∫ø k·ªâ, c√°c qu·ªëc gia l√¢n c·∫≠n Trung Qu·ªëc ƒë√£ t·ª´ng t·ªìn t·∫°i trong l·ªãch s·ª≠ nh∆∞ ƒê·∫°i L√Ω, T√¢y H·∫°, Kim, Li√™u, Hung N√¥ ‚Ä¶
ƒë·ªÅu ƒë√£ b·ªã th√¥n t√≠nh, v√† h√¨nh th√†nh n√™n m·ªôt Trung Qu·ªëc r·ªông l·ªõn c·ªßa ng√†y h√¥m nay.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/xia-dynasty-china.png&quot; alt=&quot;xia dynasty's China&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ngu·ªìn: &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%A4%8F%E6%9C%9D&quot;&gt;Wikipedia&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ch√≠nh s√°ch sau th√¥n t√≠nh c·ªßa Trung Qu·ªëc ƒë·ªëi v·ªõi c√°c qu·ªëc gia chi·∫øm ƒë∆∞·ª£c l√† cho ng∆∞·ªùi H√°n ·ªì ·∫°t sang ·ªü,
√©p k·∫øt h√¥n v·ªõi ng∆∞·ªùi H√°n, b·∫Øt h·ªçc ch·ªØ H√°n, kh√¥ng cho d√¢n thu·ªôc ƒë·ªãa ·ªü c√πng nhau. V√† th·∫ø r·ªìi d·∫ßn d·∫ßn h·ªç m·∫•t ƒëi ti·∫øng n√≥i,
ch·ªØ vi·∫øt v√† quan tr·ªçng h∆°n c·∫£ l√† √Ω ch√≠ ph·ª•c qu·ªëc. ƒê√≥ c≈©ng l√† nh·ªØng g√¨ ƒëang x·∫£y ra ·ªü T√¢y T·∫°ng ng√†y nay.&lt;/p&gt;

&lt;p&gt;Ng√†y x∆∞a khi Qu√¢n Gi·∫£i Ph√≥ng Nh√¢n D√¢n Trung Hoa (PLA) ti·∫øn h√†nh chi·∫øn d·ªãch X∆∞∆°ng ƒê√¥
(c√≤n g·ªçi l√† &lt;a href=&quot;https://en.wikipedia.org/wiki/Battle_of_Chamdo&quot;&gt;Battle of Chamdo&lt;/a&gt; hay 
&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%A5%BF%E8%97%8F%E5%92%8C%E5%B9%B3%E8%A7%A3%E6%94%BE&quot;&gt;Ë•øËóèÂíåÂπ≥Ëß£Êîæ&lt;/a&gt;,
t·∫°m d·ªãch: Cu·ªôc gi·∫£i ph√≥ng T√¢y T·∫°ng h√≤a b√¨nh)
nh·∫±m chi·∫øm ƒëo·∫°t T√¢y T·∫°ng b·∫±ng v≈© l·ª±c, nh·ªØng ng∆∞·ªùi ƒë·ª©ng ƒë·∫ßu T√¢y T·∫°ng ƒë√£ ch·ªß tr∆∞∆°ng kh√¥ng
ƒë·∫•u tranh v≈© trang m√† k√™u g·ªçi s·ª± gi√∫p ƒë·ª° l√™n ti·∫øng c·ªßa c·ªông ƒë·ªìng y√™u chu·ªông ho√† b√¨nh tr√™n
kh·∫Øp th·∫ø gi·ªõi (m·ªôt ph·∫ßn v√¨ gi√°o l√Ω nh√† Ph·∫≠t lu√¥n d·∫°y Ph·∫≠t t·ª≠ kh√¥ng n√™n li√™n quan ƒë·∫øn ch√≠nh tr·ªã),
ƒë·ªÉ r·ªìi gi·ªù ƒë√¢y d√π c√≥ mu·ªën, nh√¢n d√¢n T√¢y T·∫°ng c≈©ng kh√¥ng c√≤n ‚Äút√¢m‚Äù v√† ‚Äúl·ª±c‚Äù n·ªØa.&lt;/p&gt;

&lt;p&gt;S·ªë ph·∫≠n c·ªßa m·ªôt n∆∞·ªõc gi√°p ranh v·ªõi Trung Qu·ªëc t√¥i t·∫°m k·∫øt lu·∫≠n l√†: &lt;strong&gt;ho·∫∑c b·∫°n m·∫°nh nh∆∞ H√†n, Nh·∫≠t, ·∫§n, ƒê·∫°i Vi·ªát th·ªùi nh√† Tr·∫ßn L√™,
ho·∫∑c l√† b·∫°n b·ªã chi·∫øm&lt;/strong&gt;, g·∫ßn nh∆∞ kh√¥ng c√≥ ngo·∫°i l·ªá trong l·ªãch s·ª≠. Khi x·∫£y ra xung ƒë·ªôt,
ch·∫£ c√≥ th·∫ø l·ª±c b√™n ngo√†i n√†o ƒëi gi√∫p b·∫°n ƒë·ªÉ g√¢y x√≠ch m√≠ch v·ªõi Trung Qu·ªëc c·∫£,
nh·∫•t l√† khi n√≥ gi√†u v√† m·∫°nh th·∫ø kia.&lt;/p&gt;

&lt;h2 id=&quot;b√†i-h·ªçc-r√∫t-ra&quot;&gt;B√†i h·ªçc r√∫t ra&lt;/h2&gt;

&lt;p&gt;N·∫øu b·∫°n l√† m·ªôt qu·ªëc gia, h√£y c·ªë tr·ªü n√™n m·∫°nh khi c√≤n c∆° h·ªôi.&lt;/p&gt;

&lt;p&gt;C√≤n n·∫øu b·∫°n l√† m·ªôt c√° nh√¢n, v√† qu·ªëc gia b·∫°n ƒëang ·ªü kh√¥ng th·ªÉ l√†m ƒë∆∞·ª£c ƒëi·ªÅu ·ªü tr√™n, h√£y t√¨m m·ªôt qu·ªëc gia m·∫°nh kh√°c ƒë·ªÉ ·ªü‚Ä¶&lt;/p&gt;

&lt;p&gt;C√≤n kh√¥ng, h√£y t·∫≠p cam ch·ªãu s·ªëng nh∆∞ m·ªôt ng∆∞·ªùi Trung Qu·ªëc.&lt;/p&gt;

</description>
        <pubDate>Thu, 28 Jul 2016 00:00:00 +0200</pubDate>
        <link>https://hqc.io/2016/07/28/man-dam-ve-tay-tang.html</link>
        <guid isPermaLink="true">https://hqc.io/2016/07/28/man-dam-ve-tay-tang.html</guid>
        
        <category>thoughts</category>
        
        <category>vietnamese</category>
        
        
      </item>
    
      <item>
        <title>Worque - CLI that manages your daily notes</title>
        <description>&lt;p&gt;I would like to introduce &lt;a href=&quot;https://github.com/qcam/worque&quot;&gt;Worque&lt;/a&gt; (pronounced as &lt;code class=&quot;highlighter-rouge&quot;&gt;work&lt;/code&gt;),
which is a CLI to manage all your daily notes like a boss, with vim integration.&lt;/p&gt;

&lt;h3 id=&quot;why-worque&quot;&gt;Why Worque?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Coders hate report. Yes, let me recap: CODERS HATE REPORT!&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ever got stunned when your boss suddenly asked what you‚Äôve done yesterday?&lt;/li&gt;
  &lt;li&gt;To look back at your tasks for today without leaving your beloved terminal and VIM.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If so, worque might be a fit for you.&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gem install worque
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;how-to-use-worque&quot;&gt;How to use Worque?&lt;/h3&gt;

&lt;p&gt;Add this to your &lt;code class=&quot;highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WORQUE_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/path/to/your/lovely/notes'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Personally I‚Äôd like to map it to my Dropbox.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WORQUE_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'~/Dropbox/Notes/Todos'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After that, executing the command below will create a today‚Äôs note for you&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;worque todo --for&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;today
&lt;span class=&quot;c&quot;&gt;# ~/notes/checklist-2016-07-19.md&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or look back what‚Äôs done yesterday.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;workque todo --for yebsterday
&lt;span class=&quot;c&quot;&gt;# ~/notes/checklist-2016-07-18.md&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Oops! Today is Monday? No worries, worque got you covered&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# If today is Monday 25-07-2016&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;workque todo --for yesterday
&lt;span class=&quot;c&quot;&gt;# ~/notes/checklist-2016-07-22.md&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It‚Äôs chain-able with other commands&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim worque
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;worque todo --for&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;yesterday&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;worque todo --for&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;yesterday&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; | grep pending
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Anyway this is how I alias it in my &lt;code class=&quot;highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt;.
See &lt;a href=&quot;https://github.com/qcam/dotfiles/blob/master/zsh/aliases.zsh#L35&quot;&gt;https://github.com/qcam/dotfiles/blob/master/zsh/aliases.zsh#L35&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vim &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;worque todo --for today&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; +':cd &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WORQUE_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ytd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vim &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;worque todo --for yesterday&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; +':cd &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WORQUE_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;slack-integration&quot;&gt;Slack Integration&lt;/h3&gt;

&lt;p&gt;Yes, you can publish your daily notes to Slack too!&lt;/p&gt;

&lt;p&gt;Just make sure you have set &lt;code class=&quot;highlighter-rouge&quot;&gt;SLACK_API_TOKEN&lt;/code&gt; accordingly to spare your fingers typing everytime. See &lt;a href=&quot;https://get.slack.help/hc/en-us/articles/215770388-Creating-and-regenerating-API-tokens&quot;&gt;this post&lt;/a&gt; to get an idea of how to generate Slack API Token.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SLACK_API_TOKEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;something-very-secret&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;worque push&lt;/code&gt; to push your notes to Slack&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;worque push --channel&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;daily-report

&lt;span class=&quot;c&quot;&gt;# or forgot do it yesterday? No worries!&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;worque push --channel&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;daily-report --for&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;yesterday
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;vim-integration&quot;&gt;VIM Integration&lt;/h3&gt;

&lt;p&gt;Yes, &lt;strong&gt;&lt;em&gt;worque&lt;/em&gt;&lt;/strong&gt; loves VIM too!!!&lt;/p&gt;

&lt;p&gt;Add this to your vimrc&lt;/p&gt;

&lt;div class=&quot;language-viml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Plug &lt;span class=&quot;s1&quot;&gt;'qcam/vim-worque'&lt;/span&gt; # &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; you'&lt;span class=&quot;k&quot;&gt;re&lt;/span&gt; using &lt;span class=&quot;k&quot;&gt;vim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;plug
Plugin &lt;span class=&quot;s1&quot;&gt;'qcam/vim-worque'&lt;/span&gt; # or Vundle
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then try &lt;code class=&quot;highlighter-rouge&quot;&gt;:TD&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;:YTD&lt;/code&gt; in your VIM to view the notes for today and yesterday respectively&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;p&gt;Read more about &lt;a href=&quot;https://github.com/qcam/worque&quot;&gt;worque&lt;/a&gt;.
Read more about &lt;a href=&quot;https://github.com/qcam/vim-worque&quot;&gt;vim-worque&lt;/a&gt;.
View more in my &lt;a href=&quot;https://github.com/qcam/dotfiles&quot;&gt;dotfiles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Reporting!!!&lt;/p&gt;

&lt;p&gt;Any thoughts or ideas are welcome!!!&lt;/p&gt;

</description>
        <pubDate>Thu, 21 Jul 2016 00:00:00 +0200</pubDate>
        <link>https://hqc.io/2016/07/21/introduce-worque.html</link>
        <guid isPermaLink="true">https://hqc.io/2016/07/21/introduce-worque.html</guid>
        
        <category>ruby</category>
        
        <category>productivity</category>
        
        
      </item>
    
      <item>
        <title>Sign Git commits with Keybase</title>
        <description>&lt;p&gt;Keybase is an public key crypto for everyone, maps your identity to your public keys, and vice versa.&lt;/p&gt;

&lt;p&gt;This post will show you how to sign your Git commit with Keybase GPG key, and how to publish your key to Github&lt;/p&gt;

&lt;h2 id=&quot;generate-a-new-gpg-key&quot;&gt;Generate a new GPG key&lt;/h2&gt;

&lt;p&gt;In case you haven‚Äôt had any GPG keys on Keybase&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;keybase pgp gen --multi

&lt;span class=&quot;c&quot;&gt;# then follow the instruction, select &quot;Upload your key to Keybase&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;import-gpg-key-from-keybase&quot;&gt;Import GPG key from Keybase&lt;/h2&gt;

&lt;p&gt;In case you already have GPG keys on Keybase&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Import secret key from keybase&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;keybase pgp &lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; --secret | gpg --allow-secret-key-import --import
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To check if your key has been imported into your local GPG secret keys&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gpg --list-secret-keys
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is how it looks like if successfully imported.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Private key basic information&lt;/span&gt;

sec   4096R/BC775C77 2016-04-09 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;expires: 2032-04-05]
uid                  John Doe &amp;lt;john.doe@gmail.com&amp;gt;
ssb   4096R/7BDF34CD 2016-04-09
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;sign-git-commit&quot;&gt;Sign Git commit&lt;/h2&gt;

&lt;p&gt;If you want to sign your Git commit with the key generated/imported&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config --global user.signingkey &amp;lt;key-id&amp;gt;
&lt;span class=&quot;c&quot;&gt;# key-id is **BC775C77** for the sample private key above&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;import-public-key-to-github&quot;&gt;Import Public key to Github&lt;/h2&gt;

&lt;p&gt;To get your commit verified by Github like below&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3-ap-southeast-1.amazonaws.com/kipalog.com/87b504be-fa41-11e5-9140-6dc8b7203c31.png_6xb7qpwfxi&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To get your public key&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;keybase pgp &lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then attach the key to Github&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3-ap-southeast-1.amazonaws.com/kipalog.com/gpg-key-paste.png_p3u0cg5vcw&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs it! Feel free to leave your comments.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Jul 2016 00:00:00 +0200</pubDate>
        <link>https://hqc.io/2016/07/03/sign-git-commit-with-keybase.html</link>
        <guid isPermaLink="true">https://hqc.io/2016/07/03/sign-git-commit-with-keybase.html</guid>
        
        <category>productivity</category>
        
        
      </item>
    
      <item>
        <title>You don't need RVM gemset</title>
        <description>&lt;p&gt;We can‚Äôt deny the contribution RVM gemset gave up to the Ruby community, but do we really need gemsets to isolate our project dependencies these days?&lt;/p&gt;

&lt;h3 id=&quot;where-the-idea-of-gemset-came-from&quot;&gt;Where the idea of gemset came from?&lt;/h3&gt;

&lt;p&gt;In around 2010, RVM introduced gemset, a huge improvement which changes how the whole Ruby world deals with dependency isolation. From then on, separating Ruby environments on local computers wasn‚Äôt tough anymore. Just imagine you‚Äôre starting a fresh Rails 5 project while maintaining a Rails 2.3 application, without gemset.&lt;/p&gt;

&lt;p&gt;Read &lt;a href=&quot;http://everydayrails.com/2010/09/13/rvm-project-gemsets.html&quot;&gt;this post&lt;/a&gt; and you will understand the excitement RVM gemset brought to the world at that moment.&lt;/p&gt;

&lt;h3 id=&quot;but-you-dont-need-that-anymore&quot;&gt;But you don‚Äôt need that anymore&lt;/h3&gt;

&lt;p&gt;Because &lt;code class=&quot;highlighter-rouge&quot;&gt;bundler&lt;/code&gt; only got you covered with bundle path.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# This will install all gems into vendor/gems directory of your current project root, and this is a remembered option.&lt;/span&gt;
bundle install --path vendor/gems --retry 3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You might want to setup an alias to save your time remembering the path.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# in your .zshrc&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;bundler install --path vendor/gems --retry 3 --jobs 4
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;bundler &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Any thoughts are welcomed!&lt;/p&gt;
</description>
        <pubDate>Wed, 04 May 2016 00:00:00 +0200</pubDate>
        <link>https://hqc.io/2016/05/04/you-dont-need-rvm-gemset.html</link>
        <guid isPermaLink="true">https://hqc.io/2016/05/04/you-dont-need-rvm-gemset.html</guid>
        
        <category>ruby</category>
        
        
      </item>
    
  </channel>
</rss>
